###########################################################################
# An NGINX configuration to test local deployment on a development computer
###########################################################################

worker_processes 1;
error_log /dev/stdout info;

# During development we turn the daemon off so that we can view logs interactively
daemon off;

# During development we mostly use a static module, for best debugging and so that automated tests work
load_module modules/ngx_curity_http_phantom_token_module.so;

events { worker_connections 1024; }

http {
    sendfile on;
    proxy_cache_path cache levels=1:2 keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
        listen 8082;
        access_log  /dev/stdout;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
 
        location /api {

            # First run the module
            phantom_token on;
            phantom_token_client_credential "client_id" "client_secret";
            phantom_token_introspection_endpoint curity;

            # Then forward to the below API
            proxy_pass "http://localhost:8082/api-internal";
        }

        location curity {
            proxy_pass http://localhost:8080/oauth/v2/token;
            proxy_cache_methods POST;
            proxy_cache api_cache;
            proxy_cache_key $request_body;
            proxy_ignore_headers "Set-Cookie" "Cache-Control" "Expires" "Vary";
            proxy_cache_valid any 10m;
        }

        location /api-internal {

            # MIME types must be set like this
            default_type application/json;

            # On success, echo back headers
            add_header "authorization" $http_authorization;

            # Return a JSON response
            return 200 '{"message": "API 2 was called successfully with ${http_authorization}"}';
        }
    }
}
